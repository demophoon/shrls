syntax = "proto3";

option go_package = "gitlab.cascadia.demophoon.com/demophoon/go-shrls/server/gen";

import "google/api/annotations.proto";

package shrls;

// ============================================
// Shrls service
// ============================================
service Shrls {
	rpc GetShrl(GetShrlRequest) returns (GetShrlResponse) {
		option (google.api.http) = {
			get: "/v1/shrl/{shrl.alias}"
		};
	};

	rpc GetShrls(GetShrlsRequest) returns (GetShrlsResponse) {
		option (google.api.http) = {
			get: "/v1/shrls/{shrl.alias}"
		};
	};

	rpc ListShrls(ListShrlsRequest) returns (ListShrlsResponse) {
		option (google.api.http) = {
			get: "/v1/shrls"
		};
	};
}

// ========================================
// Server Methods
// ========================================
// GetShrl
message GetShrlRequest {
	Ref.ShortURL shrl = 1;
}
message GetShrlResponse {
	ShortURL shrl = 1;
}
// GetShrls
message GetShrlsRequest {
	Ref.ShortURL shrl = 1;
}
message GetShrlsResponse {
	repeated ShortURL shrls = 1;
}
// ListShrls (Paginated)
message ListShrlsRequest {
	optional string search = 1;
	optional int64 page = 2;
	optional int64 count = 3;
}
message ListShrlsResponse {
	repeated ShortURL shrls = 1;
	int64 total_shrls = 2;
}

// ========================================
// References
// ========================================
message Ref {
	// Reference ShortURL
	message ShortURL {
		oneof ref {
			string id = 1;
			string alias = 2;
		}
	}
}

// ========================================
// Objects
// ========================================
// Shortened Urls
message ShortURL {
	enum ShortURLType {
		LINK = 0;
		UPLOAD = 1;
		SNIPPET = 2;
	}

	string       id = 1; // External ID for ShortURL
	int64 created_at = 2; // Date the ShortURL was created at
	ShortURLType type = 3; // ShortURL type

	string       stub = 4; // URL stub
	ExpandedURL  content = 5; // Expanded destination
	int64 views = 6; // Number of times the link has been clicked
	repeated string tags = 7; // User defined tags for the ShortURL to aid searching
}

// Text snippets
message Snippet {
	string title = 1;
	bytes body = 2;
}

// Url Redirects
message Redirect {
	string url = 1;
	bytes favicon = 2;
}

message ExpandedURL {
	oneof content {
		Redirect url = 1;
		bytes    file = 2;
		Snippet  snippet = 3;
	}
}
